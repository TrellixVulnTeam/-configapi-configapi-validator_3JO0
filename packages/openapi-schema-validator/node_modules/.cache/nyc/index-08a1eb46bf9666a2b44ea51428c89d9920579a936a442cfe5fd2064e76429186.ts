"use strict";function cov_gqov6at6a(){var path="/Users/user/WebstormProjects/-configapi-configapi-validator/packages/openapi-schema-validator/index.ts";var hash="6379afd63a223f4a77fe5fd8f82e6d4d0b862055";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/user/WebstormProjects/-configapi-configapi-validator/packages/openapi-schema-validator/index.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:12},end:{line:3,column:26}},"2":{start:{line:4,column:20},end:{line:4,column:42}},"3":{start:{line:5,column:21},end:{line:5,column:60}},"4":{start:{line:6,column:21},end:{line:6,column:60}},"5":{start:{line:7,column:12},end:{line:7,column:35}},"6":{start:{line:8,column:44},end:{line:26,column:3}},"7":{start:{line:10,column:16},end:{line:10,column:69}},"8":{start:{line:11,column:8},end:{line:11,column:33}},"9":{start:{line:12,column:22},end:{line:12,column:71}},"10":{start:{line:13,column:21},end:{line:13,column:108}},"11":{start:{line:14,column:8},end:{line:14,column:28}},"12":{start:{line:15,column:8},end:{line:15,column:43}},"13":{start:{line:17,column:4},end:{line:24,column:6}},"14":{start:{line:18,column:8},end:{line:23,column:9}},"15":{start:{line:19,column:12},end:{line:19,column:53}},"16":{start:{line:22,column:12},end:{line:22,column:34}},"17":{start:{line:25,column:4},end:{line:25,column:34}},"18":{start:{line:27,column:0},end:{line:27,column:41}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:44},end:{line:8,column:45}},loc:{start:{line:8,column:56},end:{line:26,column:1}},line:8},"1":{name:"OpenAPISchemaValidator",decl:{start:{line:9,column:13},end:{line:9,column:35}},loc:{start:{line:9,column:42},end:{line:16,column:5}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:17,column:48},end:{line:17,column:49}},loc:{start:{line:17,column:70},end:{line:24,column:5}},line:17}},branchMap:{"0":{loc:{start:{line:12,column:22},end:{line:12,column:71}},type:"binary-expr",locations:[{start:{line:12,column:23},end:{line:12,column:27}},{start:{line:12,column:31},end:{line:12,column:65}},{start:{line:12,column:70},end:{line:12,column:71}}],line:12},"1":{loc:{start:{line:13,column:31},end:{line:13,column:78}},type:"cond-expr",locations:[{start:{line:13,column:47},end:{line:13,column:61}},{start:{line:13,column:64},end:{line:13,column:78}}],line:13},"2":{loc:{start:{line:13,column:80},end:{line:13,column:107}},type:"cond-expr",locations:[{start:{line:13,column:87},end:{line:13,column:102}},{start:{line:13,column:105},end:{line:13,column:107}}],line:13},"3":{loc:{start:{line:18,column:8},end:{line:23,column:9}},type:"if",locations:[{start:{line:18,column:8},end:{line:23,column:9}},{start:{line:18,column:8},end:{line:23,column:9}}],line:18}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0]},inputSourceMap:{version:3,file:"/Users/user/WebstormProjects/-configapi-configapi-validator/packages/openapi-schema-validator/index.ts",sources:["/Users/user/WebstormProjects/-configapi-configapi-validator/packages/openapi-schema-validator/index.ts"],names:[],mappings:";;AAAA,2BAAyD;AACzD,2CAAqC;AACrC,IAAM,cAAc,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;AAC/D,IAAM,cAAc,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;AAC/D,IAAM,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAoBtC;IAEE,gCAAY,IAAgC;QAC1C,IAAM,CAAC,GAAG,IAAI,aAAG,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QACtD,qBAAU,CAAC,CAAC,CAAC,CAAC;QACd,IAAM,OAAO,GAAG,CAAC,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;QAClE,IAAM,MAAM,GAAG,KAAK,CAClB,EAAE,EACF,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,EAC/C,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAC5B,CAAC;QACF,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IAEM,yCAAQ,GAAf,UAAgB,UAA4B;QAC1C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YAC/B,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;SAC1C;aAAM;YACL,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;SACvB;IACH,CAAC;IACH,6BAAC;AAAD,CAAC,AAtBD,IAsBC",sourcesContent:["import ajv, { ValidateFunction, ErrorObject } from \"ajv\";\nimport addFormats from \"ajv-formats\";\nconst openapi2Schema = require(\"./resources/openapi-2.0.json\");\nconst openapi3Schema = require(\"./resources/openapi-3.0.json\");\nconst merge = require(\"lodash.merge\");\nimport { IJsonSchema, OpenAPI } from \"openapi-types\";\n\nexport interface IOpenAPISchemaValidator {\n  /**\n   * Validate the provided OpenAPI doc against this validator's schema version and\n   * return the results.\n   */\n  validate(doc: OpenAPI.Document): OpenAPISchemaValidatorResult;\n}\n\nexport interface OpenAPISchemaValidatorArgs {\n  version: number | string;\n  extensions?: IJsonSchema;\n}\n\nexport interface OpenAPISchemaValidatorResult {\n  errors: ErrorObject[];\n}\n\nexport default class OpenAPISchemaValidator implements IOpenAPISchemaValidator {\n  private validator: ValidateFunction;\n  constructor(args: OpenAPISchemaValidatorArgs) {\n    const v = new ajv({ allErrors: true, strict: false });\n    addFormats(v);\n    const version = (args && parseInt(String(args.version), 10)) || 2;\n    const schema = merge(\n      {},\n      version === 2 ? openapi2Schema : openapi3Schema,\n      args ? args.extensions : {}\n    );\n    v.addSchema(schema);\n    this.validator = v.compile(schema);\n  }\n\n  public validate(openapiDoc: OpenAPI.Document): OpenAPISchemaValidatorResult {\n    if (!this.validator(openapiDoc)) {\n      return { errors: this.validator.errors };\n    } else {\n      return { errors: [] };\n    }\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"6379afd63a223f4a77fe5fd8f82e6d4d0b862055"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_gqov6at6a=function(){return actualCoverage;};}return actualCoverage;}cov_gqov6at6a();cov_gqov6at6a().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});var ajv_1=(cov_gqov6at6a().s[1]++,require("ajv"));var ajv_formats_1=(cov_gqov6at6a().s[2]++,require("ajv-formats"));var openapi2Schema=(cov_gqov6at6a().s[3]++,require("./resources/openapi-2.0.json"));var openapi3Schema=(cov_gqov6at6a().s[4]++,require("./resources/openapi-3.0.json"));var merge=(cov_gqov6at6a().s[5]++,require("lodash.merge"));var OpenAPISchemaValidator=(/** @class */cov_gqov6at6a().s[6]++,function(){cov_gqov6at6a().f[0]++;function OpenAPISchemaValidator(args){cov_gqov6at6a().f[1]++;var v=(cov_gqov6at6a().s[7]++,new ajv_1.default({allErrors:true,strict:false}));cov_gqov6at6a().s[8]++;ajv_formats_1.default(v);var version=(cov_gqov6at6a().s[9]++,(cov_gqov6at6a().b[0][0]++,args)&&(cov_gqov6at6a().b[0][1]++,parseInt(String(args.version),10))||(cov_gqov6at6a().b[0][2]++,2));var schema=(cov_gqov6at6a().s[10]++,merge({},version===2?(cov_gqov6at6a().b[1][0]++,openapi2Schema):(cov_gqov6at6a().b[1][1]++,openapi3Schema),args?(cov_gqov6at6a().b[2][0]++,args.extensions):(cov_gqov6at6a().b[2][1]++,{})));cov_gqov6at6a().s[11]++;v.addSchema(schema);cov_gqov6at6a().s[12]++;this.validator=v.compile(schema);}cov_gqov6at6a().s[13]++;OpenAPISchemaValidator.prototype.validate=function(openapiDoc){cov_gqov6at6a().f[2]++;cov_gqov6at6a().s[14]++;if(!this.validator(openapiDoc)){cov_gqov6at6a().b[3][0]++;cov_gqov6at6a().s[15]++;return{errors:this.validator.errors};}else{cov_gqov6at6a().b[3][1]++;cov_gqov6at6a().s[16]++;return{errors:[]};}};cov_gqov6at6a().s[17]++;return OpenAPISchemaValidator;}());cov_gqov6at6a().s[18]++;exports.default=OpenAPISchemaValidator;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL3VzZXIvV2Vic3Rvcm1Qcm9qZWN0cy8tY29uZmlnYXBpLWNvbmZpZ2FwaS12YWxpZGF0b3IvcGFja2FnZXMvb3BlbmFwaS1zY2hlbWEtdmFsaWRhdG9yL2luZGV4LnRzIiwic291cmNlcyI6WyIvVXNlcnMvdXNlci9XZWJzdG9ybVByb2plY3RzLy1jb25maWdhcGktY29uZmlnYXBpLXZhbGlkYXRvci9wYWNrYWdlcy9vcGVuYXBpLXNjaGVtYS12YWxpZGF0b3IvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQkFBeUQ7QUFDekQsMkNBQXFDO0FBQ3JDLElBQU0sY0FBYyxHQUFHLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO0FBQy9ELElBQU0sY0FBYyxHQUFHLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO0FBQy9ELElBQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztBQW9CdEM7SUFFRSxnQ0FBWSxJQUFnQztRQUMxQyxJQUFNLENBQUMsR0FBRyxJQUFJLGFBQUcsQ0FBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDdEQscUJBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNkLElBQU0sT0FBTyxHQUFHLENBQUMsSUFBSSxJQUFJLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xFLElBQU0sTUFBTSxHQUFHLEtBQUssQ0FDbEIsRUFBRSxFQUNGLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsY0FBYyxFQUMvQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FDNUIsQ0FBQztRQUNGLENBQUMsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDcEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFTSx5Q0FBUSxHQUFmLFVBQWdCLFVBQTRCO1FBQzFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQy9CLE9BQU8sRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztTQUMxQzthQUFNO1lBQ0wsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsQ0FBQztTQUN2QjtJQUNILENBQUM7SUFDSCw2QkFBQztBQUFELENBQUMsQUF0QkQsSUFzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYWp2LCB7IFZhbGlkYXRlRnVuY3Rpb24sIEVycm9yT2JqZWN0IH0gZnJvbSBcImFqdlwiO1xuaW1wb3J0IGFkZEZvcm1hdHMgZnJvbSBcImFqdi1mb3JtYXRzXCI7XG5jb25zdCBvcGVuYXBpMlNjaGVtYSA9IHJlcXVpcmUoXCIuL3Jlc291cmNlcy9vcGVuYXBpLTIuMC5qc29uXCIpO1xuY29uc3Qgb3BlbmFwaTNTY2hlbWEgPSByZXF1aXJlKFwiLi9yZXNvdXJjZXMvb3BlbmFwaS0zLjAuanNvblwiKTtcbmNvbnN0IG1lcmdlID0gcmVxdWlyZShcImxvZGFzaC5tZXJnZVwiKTtcbmltcG9ydCB7IElKc29uU2NoZW1hLCBPcGVuQVBJIH0gZnJvbSBcIm9wZW5hcGktdHlwZXNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBJT3BlbkFQSVNjaGVtYVZhbGlkYXRvciB7XG4gIC8qKlxuICAgKiBWYWxpZGF0ZSB0aGUgcHJvdmlkZWQgT3BlbkFQSSBkb2MgYWdhaW5zdCB0aGlzIHZhbGlkYXRvcidzIHNjaGVtYSB2ZXJzaW9uIGFuZFxuICAgKiByZXR1cm4gdGhlIHJlc3VsdHMuXG4gICAqL1xuICB2YWxpZGF0ZShkb2M6IE9wZW5BUEkuRG9jdW1lbnQpOiBPcGVuQVBJU2NoZW1hVmFsaWRhdG9yUmVzdWx0O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE9wZW5BUElTY2hlbWFWYWxpZGF0b3JBcmdzIHtcbiAgdmVyc2lvbjogbnVtYmVyIHwgc3RyaW5nO1xuICBleHRlbnNpb25zPzogSUpzb25TY2hlbWE7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgT3BlbkFQSVNjaGVtYVZhbGlkYXRvclJlc3VsdCB7XG4gIGVycm9yczogRXJyb3JPYmplY3RbXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT3BlbkFQSVNjaGVtYVZhbGlkYXRvciBpbXBsZW1lbnRzIElPcGVuQVBJU2NoZW1hVmFsaWRhdG9yIHtcbiAgcHJpdmF0ZSB2YWxpZGF0b3I6IFZhbGlkYXRlRnVuY3Rpb247XG4gIGNvbnN0cnVjdG9yKGFyZ3M6IE9wZW5BUElTY2hlbWFWYWxpZGF0b3JBcmdzKSB7XG4gICAgY29uc3QgdiA9IG5ldyBhanYoeyBhbGxFcnJvcnM6IHRydWUsIHN0cmljdDogZmFsc2UgfSk7XG4gICAgYWRkRm9ybWF0cyh2KTtcbiAgICBjb25zdCB2ZXJzaW9uID0gKGFyZ3MgJiYgcGFyc2VJbnQoU3RyaW5nKGFyZ3MudmVyc2lvbiksIDEwKSkgfHwgMjtcbiAgICBjb25zdCBzY2hlbWEgPSBtZXJnZShcbiAgICAgIHt9LFxuICAgICAgdmVyc2lvbiA9PT0gMiA/IG9wZW5hcGkyU2NoZW1hIDogb3BlbmFwaTNTY2hlbWEsXG4gICAgICBhcmdzID8gYXJncy5leHRlbnNpb25zIDoge31cbiAgICApO1xuICAgIHYuYWRkU2NoZW1hKHNjaGVtYSk7XG4gICAgdGhpcy52YWxpZGF0b3IgPSB2LmNvbXBpbGUoc2NoZW1hKTtcbiAgfVxuXG4gIHB1YmxpYyB2YWxpZGF0ZShvcGVuYXBpRG9jOiBPcGVuQVBJLkRvY3VtZW50KTogT3BlbkFQSVNjaGVtYVZhbGlkYXRvclJlc3VsdCB7XG4gICAgaWYgKCF0aGlzLnZhbGlkYXRvcihvcGVuYXBpRG9jKSkge1xuICAgICAgcmV0dXJuIHsgZXJyb3JzOiB0aGlzLnZhbGlkYXRvci5lcnJvcnMgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHsgZXJyb3JzOiBbXSB9O1xuICAgIH1cbiAgfVxufVxuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy91c2VyL1dlYnN0b3JtUHJvamVjdHMvLWNvbmZpZ2FwaS1jb25maWdhcGktdmFsaWRhdG9yL3BhY2thZ2VzL29wZW5hcGktc2NoZW1hLXZhbGlkYXRvci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoidzNMQXFDRzt5S0FyQ0gsR0FBQSxDQUFBLEtBQUEseUJBQUEsT0FBQSxDQUFBLEtBQUEsQ0FBQSxDQUFBLENBQ0EsR0FBQSxDQUFBLGFBQUEseUJBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQSxDQUFBLENBQ0EsR0FBTSxDQUFBLGNBQWMseUJBQUcsT0FBTyxDQUFDLDhCQUFELENBQVYsQ0FBcEIsQ0FDQSxHQUFNLENBQUEsY0FBYyx5QkFBRyxPQUFPLENBQUMsOEJBQUQsQ0FBVixDQUFwQixDQUNBLEdBQU0sQ0FBQSxLQUFLLHlCQUFHLE9BQU8sQ0FBQyxjQUFELENBQVYsQ0FBWCxDQW9CQSxHQUFBLENBQUEsc0JBQUEsRUFBQSxhQUFBLHVCQUFBLFVBQUEsd0JBRUUsUUFBQSxDQUFBLHNCQUFBLENBQVksSUFBWixDQUE0Qyx3QkFDMUMsR0FBTSxDQUFBLENBQUMseUJBQUcsR0FBSSxDQUFBLEtBQUEsQ0FBQSxPQUFKLENBQVEsQ0FBRSxTQUFTLENBQUUsSUFBYixDQUFtQixNQUFNLENBQUUsS0FBM0IsQ0FBUixDQUFILENBQVAsQ0FEMEMsdUJBRTFDLGFBQUEsQ0FBQSxPQUFBLENBQVcsQ0FBWCxFQUNBLEdBQU0sQ0FBQSxPQUFPLHlCQUFJLDJCQUFBLElBQUksOEJBQUksUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTixDQUFQLENBQXVCLEVBQXZCLENBQVosQ0FBTCw2QkFBZ0QsQ0FBaEQsQ0FBSCxDQUFiLENBQ0EsR0FBTSxDQUFBLE1BQU0sMEJBQUcsS0FBSyxDQUNsQixFQURrQixDQUVsQixPQUFPLEdBQUssQ0FBWiw0QkFBZ0IsY0FBaEIsNkJBQWlDLGNBQWpDLENBRmtCLENBR2xCLElBQUksNEJBQUcsSUFBSSxDQUFDLFVBQVIsNkJBQXFCLEVBQXJCLENBSGMsQ0FBUixDQUFaLENBSjBDLHdCQVMxQyxDQUFDLENBQUMsU0FBRixDQUFZLE1BQVosRUFUMEMsd0JBVTFDLEtBQUssU0FBTCxDQUFpQixDQUFDLENBQUMsT0FBRixDQUFVLE1BQVYsQ0FBakIsQ0FDRCxDQWJILHdCQWVTLHNCQUFBLENBQUEsU0FBQSxDQUFBLFFBQUEsQ0FBUCxTQUFnQixVQUFoQixDQUE0QyxnREFDMUMsR0FBSSxDQUFDLEtBQUssU0FBTCxDQUFlLFVBQWYsQ0FBTCxDQUFpQyxtREFDL0IsTUFBTyxDQUFFLE1BQU0sQ0FBRSxLQUFLLFNBQUwsQ0FBZSxNQUF6QixDQUFQLENBQ0QsQ0FGRCxJQUVPLG1EQUNMLE1BQU8sQ0FBRSxNQUFNLENBQUUsRUFBVixDQUFQLENBQ0QsQ0FDRixDQU5NLENBZlQsd0JBc0JBLE1BQUEsQ0FBQSxzQkFBQSxDQUFDLENBdEJELEVBQUEsQ0FBQSxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFqdiwgeyBWYWxpZGF0ZUZ1bmN0aW9uLCBFcnJvck9iamVjdCB9IGZyb20gXCJhanZcIjtcbmltcG9ydCBhZGRGb3JtYXRzIGZyb20gXCJhanYtZm9ybWF0c1wiO1xuY29uc3Qgb3BlbmFwaTJTY2hlbWEgPSByZXF1aXJlKFwiLi9yZXNvdXJjZXMvb3BlbmFwaS0yLjAuanNvblwiKTtcbmNvbnN0IG9wZW5hcGkzU2NoZW1hID0gcmVxdWlyZShcIi4vcmVzb3VyY2VzL29wZW5hcGktMy4wLmpzb25cIik7XG5jb25zdCBtZXJnZSA9IHJlcXVpcmUoXCJsb2Rhc2gubWVyZ2VcIik7XG5pbXBvcnQgeyBJSnNvblNjaGVtYSwgT3BlbkFQSSB9IGZyb20gXCJvcGVuYXBpLXR5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSU9wZW5BUElTY2hlbWFWYWxpZGF0b3Ige1xuICAvKipcbiAgICogVmFsaWRhdGUgdGhlIHByb3ZpZGVkIE9wZW5BUEkgZG9jIGFnYWluc3QgdGhpcyB2YWxpZGF0b3IncyBzY2hlbWEgdmVyc2lvbiBhbmRcbiAgICogcmV0dXJuIHRoZSByZXN1bHRzLlxuICAgKi9cbiAgdmFsaWRhdGUoZG9jOiBPcGVuQVBJLkRvY3VtZW50KTogT3BlbkFQSVNjaGVtYVZhbGlkYXRvclJlc3VsdDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBPcGVuQVBJU2NoZW1hVmFsaWRhdG9yQXJncyB7XG4gIHZlcnNpb246IG51bWJlciB8IHN0cmluZztcbiAgZXh0ZW5zaW9ucz86IElKc29uU2NoZW1hO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE9wZW5BUElTY2hlbWFWYWxpZGF0b3JSZXN1bHQge1xuICBlcnJvcnM6IEVycm9yT2JqZWN0W107XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9wZW5BUElTY2hlbWFWYWxpZGF0b3IgaW1wbGVtZW50cyBJT3BlbkFQSVNjaGVtYVZhbGlkYXRvciB7XG4gIHByaXZhdGUgdmFsaWRhdG9yOiBWYWxpZGF0ZUZ1bmN0aW9uO1xuICBjb25zdHJ1Y3RvcihhcmdzOiBPcGVuQVBJU2NoZW1hVmFsaWRhdG9yQXJncykge1xuICAgIGNvbnN0IHYgPSBuZXcgYWp2KHsgYWxsRXJyb3JzOiB0cnVlLCBzdHJpY3Q6IGZhbHNlIH0pO1xuICAgIGFkZEZvcm1hdHModik7XG4gICAgY29uc3QgdmVyc2lvbiA9IChhcmdzICYmIHBhcnNlSW50KFN0cmluZyhhcmdzLnZlcnNpb24pLCAxMCkpIHx8IDI7XG4gICAgY29uc3Qgc2NoZW1hID0gbWVyZ2UoXG4gICAgICB7fSxcbiAgICAgIHZlcnNpb24gPT09IDIgPyBvcGVuYXBpMlNjaGVtYSA6IG9wZW5hcGkzU2NoZW1hLFxuICAgICAgYXJncyA/IGFyZ3MuZXh0ZW5zaW9ucyA6IHt9XG4gICAgKTtcbiAgICB2LmFkZFNjaGVtYShzY2hlbWEpO1xuICAgIHRoaXMudmFsaWRhdG9yID0gdi5jb21waWxlKHNjaGVtYSk7XG4gIH1cblxuICBwdWJsaWMgdmFsaWRhdGUob3BlbmFwaURvYzogT3BlbkFQSS5Eb2N1bWVudCk6IE9wZW5BUElTY2hlbWFWYWxpZGF0b3JSZXN1bHQge1xuICAgIGlmICghdGhpcy52YWxpZGF0b3Iob3BlbmFwaURvYykpIHtcbiAgICAgIHJldHVybiB7IGVycm9yczogdGhpcy52YWxpZGF0b3IuZXJyb3JzIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB7IGVycm9yczogW10gfTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==